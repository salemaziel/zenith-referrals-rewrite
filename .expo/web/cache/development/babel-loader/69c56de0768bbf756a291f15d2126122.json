{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/.cache/query-result-store.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { StaticQueryContext } from \"gatsby\";\nimport { getPageQueryData, registerPath as socketRegisterPath, unregisterPath as socketUnregisterPath, getStaticQueryData } from \"./socketIo\";\nimport PageRenderer from \"./page-renderer\";\nimport normalizePagePath from \"./normalize-page-path\";\n\nif (process.env.NODE_ENV === \"production\") {\n  throw new Error(\"It appears like Gatsby is misconfigured. JSONStore is Gatsby internal \" + \"development-only component and should never be used in production.\\n\\n\" + \"Unless your site has a complex or custom webpack/Gatsby \" + \"configuration this is likely a bug in Gatsby. \" + \"Please report this at https://github.com/gatsbyjs/gatsby/issues \" + \"with steps to reproduce this error.\");\n}\n\nvar getPathFromProps = function getPathFromProps(props) {\n  return props.pageResources && props.pageResources.page ? normalizePagePath(props.pageResources.page.path) : undefined;\n};\n\nexport var PageQueryStore = function (_React$Component) {\n  _inherits(PageQueryStore, _React$Component);\n\n  var _super = _createSuper(PageQueryStore);\n\n  function PageQueryStore(props) {\n    var _this;\n\n    _classCallCheck(this, PageQueryStore);\n\n    _this = _super.call(this, props);\n\n    _this.handleMittEvent = function () {\n      _this.setState({\n        pageQueryData: getPageQueryData()\n      });\n    };\n\n    _this.state = {\n      pageQueryData: getPageQueryData(),\n      path: null\n    };\n    return _this;\n  }\n\n  _createClass(PageQueryStore, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      socketRegisterPath(getPathFromProps(this.props));\n\n      ___emitter.on(\"*\", this.handleMittEvent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      socketUnregisterPath(this.state.path);\n\n      ___emitter.off(\"*\", this.handleMittEvent);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.props.location !== nextProps.location || this.state.path !== nextState.path || this.state.pageQueryData[normalizePagePath(nextState.path)] !== nextState.pageQueryData[normalizePagePath(nextState.path)];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.pageQueryData[getPathFromProps(this.props)];\n\n      if (!data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(PageRenderer, _extends({}, this.props, data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 12\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var newPath = getPathFromProps(props);\n\n      if (newPath !== state.path) {\n        socketUnregisterPath(state.path);\n        socketRegisterPath(newPath);\n        return {\n          path: newPath\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return PageQueryStore;\n}(React.Component);\nexport var StaticQueryStore = function (_React$Component2) {\n  _inherits(StaticQueryStore, _React$Component2);\n\n  var _super2 = _createSuper(StaticQueryStore);\n\n  function StaticQueryStore(props) {\n    var _this2;\n\n    _classCallCheck(this, StaticQueryStore);\n\n    _this2 = _super2.call(this, props);\n\n    _this2.handleMittEvent = function () {\n      _this2.setState({\n        staticQueryData: getStaticQueryData()\n      });\n    };\n\n    _this2.state = {\n      staticQueryData: getStaticQueryData()\n    };\n    return _this2;\n  }\n\n  _createClass(StaticQueryStore, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ___emitter.on(\"*\", this.handleMittEvent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ___emitter.off(\"*\", this.handleMittEvent);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.staticQueryData !== nextState.staticQueryData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StaticQueryContext.Provider, {\n        value: this.state.staticQueryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return StaticQueryStore;\n}(React.Component);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/.cache/query-result-store.js"],"names":["React","StaticQueryContext","getPageQueryData","registerPath","socketRegisterPath","unregisterPath","socketUnregisterPath","getStaticQueryData","PageRenderer","normalizePagePath","process","env","NODE_ENV","Error","getPathFromProps","props","pageResources","page","path","undefined","PageQueryStore","handleMittEvent","setState","pageQueryData","state","___emitter","on","off","nextProps","nextState","location","data","newPath","Component","StaticQueryStore","staticQueryData","children"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { StaticQueryContext } from \"gatsby\"\nimport {\n  getPageQueryData,\n  registerPath as socketRegisterPath,\n  unregisterPath as socketUnregisterPath,\n  getStaticQueryData,\n} from \"./socketIo\"\nimport PageRenderer from \"./page-renderer\"\nimport normalizePagePath from \"./normalize-page-path\"\n\nif (process.env.NODE_ENV === `production`) {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. JSONStore is Gatsby internal ` +\n      `development-only component and should never be used in production.\\n\\n` +\n      `Unless your site has a complex or custom webpack/Gatsby ` +\n      `configuration this is likely a bug in Gatsby. ` +\n      `Please report this at https://github.com/gatsbyjs/gatsby/issues ` +\n      `with steps to reproduce this error.`\n  )\n}\n\nconst getPathFromProps = props =>\n  props.pageResources && props.pageResources.page\n    ? normalizePagePath(props.pageResources.page.path)\n    : undefined\n\nexport class PageQueryStore extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageQueryData: getPageQueryData(),\n      path: null,\n    }\n  }\n\n  handleMittEvent = () => {\n    this.setState({\n      pageQueryData: getPageQueryData(),\n    })\n  }\n\n  componentDidMount() {\n    socketRegisterPath(getPathFromProps(this.props))\n    ___emitter.on(`*`, this.handleMittEvent)\n  }\n\n  componentWillUnmount() {\n    socketUnregisterPath(this.state.path)\n    ___emitter.off(`*`, this.handleMittEvent)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const newPath = getPathFromProps(props)\n    if (newPath !== state.path) {\n      socketUnregisterPath(state.path)\n      socketRegisterPath(newPath)\n      return {\n        path: newPath,\n      }\n    }\n\n    return null\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // We want to update this component when:\n    // - location changed\n    // - page data for path changed\n\n    return (\n      this.props.location !== nextProps.location ||\n      this.state.path !== nextState.path ||\n      this.state.pageQueryData[normalizePagePath(nextState.path)] !==\n        nextState.pageQueryData[normalizePagePath(nextState.path)]\n    )\n  }\n\n  render() {\n    const data = this.state.pageQueryData[getPathFromProps(this.props)]\n    // eslint-disable-next-line\n    if (!data) {\n      return <div />\n    }\n\n    return <PageRenderer {...this.props} {...data} />\n  }\n}\n\nexport class StaticQueryStore extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      staticQueryData: getStaticQueryData(),\n    }\n  }\n\n  handleMittEvent = () => {\n    this.setState({\n      staticQueryData: getStaticQueryData(),\n    })\n  }\n\n  componentDidMount() {\n    ___emitter.on(`*`, this.handleMittEvent)\n  }\n\n  componentWillUnmount() {\n    ___emitter.off(`*`, this.handleMittEvent)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // We want to update this component when:\n    // - static query results changed\n\n    return this.state.staticQueryData !== nextState.staticQueryData\n  }\n\n  render() {\n    return (\n      <StaticQueryContext.Provider value={this.state.staticQueryData}>\n        {this.props.children}\n      </StaticQueryContext.Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}