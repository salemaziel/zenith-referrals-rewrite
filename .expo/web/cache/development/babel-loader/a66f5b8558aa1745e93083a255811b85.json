{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Post/Post.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { withFirebase } from \"../../../utils/Firebase\";\n\nvar Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._initFirebase = false;\n    _this.state = {\n      post: null,\n      loading: true\n    };\n\n    _this.firebaseInit = function () {\n      if (_this.props.firebase && !_this._initFirebase) {\n        _this._initFirebase = true;\n\n        _this.getPost();\n      }\n    };\n\n    _this.getPost = function () {\n      var _this$props = _this.props,\n          firebase = _this$props.firebase,\n          slug = _this$props.slug;\n      firebase.post({\n        slug: slug\n      }).get().then(function (result) {\n        _this.setState({\n          post: result.docs && result.docs[0].data(),\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isLoaded = this.props.isLoaded;\n\n      if (!isLoaded) {\n        this.firebaseInit();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var isLoaded = this.props.isLoaded;\n\n      if (!isLoaded) {\n        this.firebaseInit();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          post = _this$state.post;\n      var _this$props2 = this.props,\n          isLoaded = _this$props2.isLoaded,\n          clientfirstname = _this$props2.clientfirstname,\n          clientlastname = _this$props2.clientlastname,\n          clientemail = _this$props2.clientemail,\n          clientphone = _this$props2.clientphone,\n          clientstreetaddress = _this$props2.clientstreetaddress,\n          clientcity = _this$props2.clientcity,\n          clientstate = _this$props2.clientstate,\n          clientzip = _this$props2.clientzip,\n          description = _this$props2.description;\n      var finalDescription = isLoaded ? description : post && post.description;\n      var finalFirstName = isLoaded ? clientfirstname : post && post.clientfirstname;\n      var finalLastName = isLoaded ? clientlastname : post && post.clientlastname;\n      var finalEmail = isLoaded ? clientemail : post && post.clientemail;\n      var finalPhone = isLoaded ? clientphone : post && post.clientphone;\n      var finalStreetAddress = isLoaded ? clientstreetaddress : post && post.clientstreetaddress;\n      var finalCity = isLoaded ? clientcity : post && post.clientcity;\n      var finalState = isLoaded ? clientstate : post && post.clientstate;\n      var finalZip = isLoaded ? clientzip : post && post.clientzip;\n      if (!isLoaded && loading) return null;\n      return React.createElement(\"div\", {\n        className: \"post container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, finalFirstName, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 30\n        }\n      }), finalLastName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, finalEmail), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, finalPhone), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, finalStreetAddress), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, finalCity), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, finalState), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, finalZip), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, finalDescription));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default withFirebase(Post);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Post/Post.jsx"],"names":["React","Component","withFirebase","Post","_initFirebase","state","post","loading","firebaseInit","props","firebase","getPost","slug","get","then","result","setState","docs","data","isLoaded","clientfirstname","clientlastname","clientemail","clientphone","clientstreetaddress","clientcity","clientstate","clientzip","description","finalDescription","finalFirstName","finalLastName","finalEmail","finalPhone","finalStreetAddress","finalCity","finalState","finalZip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase } from '../../../utils/Firebase';\n\nclass Post extends Component {\n  _initFirebase = false;\n\n  state = {\n    post: null,\n    loading: true,\n  };\n\n  firebaseInit = () => {\n    if (this.props.firebase && !this._initFirebase) {\n      this._initFirebase = true;\n\n      this.getPost();\n    }\n  };\n\n  componentDidMount() {\n    const { isLoaded } = this.props;\n    if (!isLoaded) {\n      this.firebaseInit();\n    }\n  }\n\n  componentDidUpdate() {\n    const { isLoaded } = this.props;\n    if (!isLoaded) {\n      this.firebaseInit();\n    }\n  }\n\n  getPost = () => {\n    const { firebase, slug } = this.props;\n\n    firebase\n      .post({ slug })\n      .get()\n      .then(result => {\n        this.setState({\n          post: result.docs && result.docs[0].data(),\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const { loading, post } = this.state;\n    const { isLoaded, clientfirstname, clientlastname, clientemail, clientphone, clientstreetaddress, clientcity, clientstate, clientzip, description } = this.props;\n\n    const finalDescription = isLoaded\n      ? description\n      : post && post.description;\n    const finalFirstName = isLoaded ? clientfirstname : post && post.clientfirstname;\n\n    const finalLastName = isLoaded ? clientlastname : post && post.clientlastname;\n\n    const finalEmail = isLoaded ? clientemail : post && post.clientemail;\n\n    const finalPhone = isLoaded ? clientphone : post && post.clientphone;\n\n    const finalStreetAddress = isLoaded ? clientstreetaddress : post && post.clientstreetaddress;\n\n    const finalCity = isLoaded ? clientcity : post && post.clientcity;\n\n    const finalState = isLoaded ? clientstate : post && post.clientstate;\n\n    const finalZip = isLoaded ? clientzip : post && post.clientzip;\n\n    if (!isLoaded && loading) return null;\n\n    return (\n      <div className=\"post container\">\n        <h1>{finalFirstName} <br />{finalLastName}</h1>\n        <div>{finalEmail}</div>\n        <div>{finalPhone}</div>\n        <div>{finalStreetAddress}</div>\n        <div>{finalCity}</div>\n        <div>{finalState}</div>\n        <div>{finalZip}</div>\n        <div>{finalDescription}</div>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(Post);\n"]},"metadata":{},"sourceType":"module"}