{"ast":null,"code":"export default (function (str) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  if (!prefix) {\n    return str;\n  }\n\n  prefix += \"/\";\n\n  if (str.substr(0, prefix.length) === prefix) {\n    return str.slice(prefix.length - 1);\n  }\n\n  return str;\n});","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/.cache/strip-prefix.js"],"names":["str","prefix","substr","length","slice"],"mappings":"AAKA,gBAAe,UAACA,GAAD,EAAsB;AAAA,MAAhBC,MAAgB;;AACnC,MAAI,CAACA,MAAL,EAAa;AACX,WAAOD,GAAP;AACD;;AAEDC,EAAAA,MAAM,OAAN;;AAEA,MAAID,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcD,MAAM,CAACE,MAArB,MAAiCF,MAArC,EAA6C;AAC3C,WAAOD,GAAG,CAACI,KAAJ,CAAUH,MAAM,CAACE,MAAP,GAAgB,CAA1B,CAAP;AACD;;AAED,SAAOH,GAAP;AACD,CAZD","sourcesContent":["/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default (str, prefix = ``) => {\n  if (!prefix) {\n    return str\n  }\n\n  prefix += `/`\n\n  if (str.substr(0, prefix.length) === prefix) {\n    return str.slice(prefix.length - 1)\n  }\n\n  return str\n}\n"]},"metadata":{},"sourceType":"module"}