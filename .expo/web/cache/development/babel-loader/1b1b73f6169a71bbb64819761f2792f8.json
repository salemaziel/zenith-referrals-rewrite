{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Home/Home.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport { withFirebase } from \"../../../utils/Firebase\";\nimport Input from \"../../atoms/Input\";\nimport Button from \"../../atoms/Button\";\nimport Loading from \"../../atoms/Loading\";\nimport Image from \"../../atoms/Image\";\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._initFirebase = false;\n    _this.state = {\n      posts: [],\n      loading: true,\n      clientfirstname: '',\n      clientlastname: '',\n      clientemail: '',\n      clientphone: '',\n      clientstreetaddress: '',\n      clientcity: '',\n      clientstate: '',\n      clientzip: '',\n      description: ''\n    };\n\n    _this.firebaseInit = function () {\n      if (_this.props.firebase && !_this._initFirebase) {\n        _this._initFirebase = true;\n\n        _this.getPosts();\n      }\n    };\n\n    _this.getPosts = function () {\n      var firebase = _this.props.firebase;\n      firebase.posts().get().then(function (querySnapshot) {\n        var data = querySnapshot.docs.map(function (item) {\n          return item.data();\n        });\n\n        _this.setState({\n          posts: data,\n          loading: false\n        });\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          posts = _this$state.posts,\n          clientfirstname = _this$state.clientfirstname,\n          clientlastname = _this$state.clientlastname,\n          clientemail = _this$state.clientemail,\n          clientphone = _this$state.clientphone,\n          clientstreetaddress = _this$state.clientstreetaddress,\n          clientcity = _this$state.clientcity,\n          clientstate = _this$state.clientstate,\n          clientzip = _this$state.clientzip,\n          description = _this$state.description;\n      var firebase = _this.props.firebase;\n      var slug = clientlastname.match(/^[a-zA-Z0-9 ]*$/, '') && clientlastname.match(/^[a-zA-Z0-9 ]*$/, '')[0] || '';\n      var latestPost = {\n        slug: slug.toLowerCase().split(' ').join('-') + Math.floor(Math.random() * 200) + 1,\n        clientfirstname: clientfirstname,\n        clientlastname: clientlastname,\n        clientemail: clientemail,\n        clientphone: clientphone,\n        clientstreetaddress: clientstreetaddress,\n        clientcity: clientcity,\n        clientstate: clientstate,\n        clientzip: clientzip,\n        description: description\n      };\n      var newPosts = [latestPost].concat(_toConsumableArray(posts));\n\n      _this.setState({\n        posts: newPosts,\n        clientfirstname: '',\n        clientlastname: '',\n        clientemail: '',\n        clientphone: '',\n        clientstreetaddress: '',\n        clientcity: '',\n        clientstate: '',\n        clientzip: '',\n        description: ''\n      });\n\n      firebase.posts().add(_objectSpread({}, latestPost));\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.firebaseInit();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.firebaseInit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          posts = _this$state2.posts,\n          loading = _this$state2.loading,\n          clientfirstname = _this$state2.clientfirstname,\n          clientlastname = _this$state2.clientlastname,\n          clientemail = _this$state2.clientemail,\n          clientphone = _this$state2.clientphone,\n          clientstreetaddress = _this$state2.clientstreetaddress,\n          clientcity = _this$state2.clientcity,\n          clientstate = _this$state2.clientstate,\n          clientzip = _this$state2.clientzip,\n          description = _this$state2.description;\n      if (loading) return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"home container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, React.createElement(\"div\", {\n        className: \"home__details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, React.createElement(\"h1\", {\n        className: \"home__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, \"Dashboard\")), React.createElement(\"div\", {\n        className: \"home__posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(\"div\", {\n        className: \"home__posts__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, React.createElement(\"div\", {\n        className: \"home__posts__form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, \"Add New Referral\"), React.createElement(\"form\", {\n        name: \"Referral-Rewards\",\n        \"data-netlify\": \"true\",\n        \"data-netlify-honeypot\": \"bot-field\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"bot-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }), React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"form-name\",\n        value: \"Referral-Rewards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientfirstname\",\n        type: \"text\",\n        value: clientfirstname,\n        labelName: \"Client's First Name\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientlastname\",\n        type: \"text\",\n        value: clientlastname,\n        labelName: \"Client's Last Name\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientemail\",\n        type: \"email\",\n        value: clientemail,\n        labelName: \"Client's Email\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientphone\",\n        type: \"tel\",\n        value: clientphone,\n        labelName: \"Client's Phone\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientstreetaddress\",\n        type: \"text\",\n        value: clientstreetaddress,\n        labelName: \"Client's Street Address\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientcity\",\n        type: \"text\",\n        value: clientcity,\n        labelName: \"Client's City\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientstate\",\n        type: \"text\",\n        value: clientstate,\n        labelName: \"Client's State\",\n        placeholder: \"CA\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"clientzip\",\n        type: \"text\",\n        value: clientzip,\n        labelName: \"Client's Zip Code\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }), React.createElement(Input, {\n        name: \"description\",\n        type: \"textarea\",\n        value: description,\n        labelName: \"Description\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        className: \"home__posts__form__btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }))), React.createElement(\"div\", {\n        className: \"home__posts__items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, React.createElement(\"div\", {\n        className: \"home__posts__items__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, \"Previous Referrals\"), posts && posts.length > 0 && posts.map(function (item, id) {\n        return React.createElement(\"div\", {\n          key: id,\n          className: \"home__post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }\n        }, React.createElement(Link, {\n          className: \"home__post__title\",\n          to: '/post/' + item.slug,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }\n        }, React.createElement(Image, {\n          className: \"home__post__image\",\n          filename: \"postBG.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }\n        }), React.createElement(\"div\", {\n          className: \"home__post__text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }\n        }, item.clientfirstname && item.clientfirstname < 30 ? item.clientfirstname : item.clientfirstname.slice(0, 30) + '...', React.createElement(\"div\", {\n          className: \"home__post__description\",\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 23\n          }\n        }, item.clientlastname && item.clientlastname.length > 150 ? item.clientlastname.slice(0, 150) : item.clientlastname + '...'))));\n      }))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default withFirebase(Home);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Home/Home.jsx"],"names":["React","Component","Link","withFirebase","Input","Button","Loading","Image","Home","_initFirebase","state","posts","loading","clientfirstname","clientlastname","clientemail","clientphone","clientstreetaddress","clientcity","clientstate","clientzip","description","firebaseInit","props","firebase","getPosts","get","then","querySnapshot","data","docs","map","item","setState","handleSubmit","e","preventDefault","slug","match","latestPost","toLowerCase","split","join","Math","floor","random","newPosts","add","handleChange","target","name","value","length","id","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport { withFirebase } from '../../../utils/Firebase';\nimport Input from '../../atoms/Input';\nimport Button from '../../atoms/Button';\nimport Loading from '../../atoms/Loading';\nimport Image from '../../atoms/Image';\n\nclass Home extends Component {\n  _initFirebase = false;\n\n  state = {\n    posts: [],\n    loading: true,\n    clientfirstname: '',\n    clientlastname: '',\n    clientemail: '',\n    clientphone: '',\n    clientstreetaddress: '',\n    clientcity: '',\n    clientstate: '',\n    clientzip: '',\n    description: '',\n  };\n\n  firebaseInit = () => {\n    if (this.props.firebase && !this._initFirebase) {\n      this._initFirebase = true;\n\n      this.getPosts();\n    }\n  };\n\n  componentDidMount() {\n    this.firebaseInit();\n  }\n\n  componentDidUpdate() {\n    this.firebaseInit();\n  }\n\n  getPosts = () => {\n    const { firebase } = this.props;\n\n    firebase\n      .posts()\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((item) => item.data());\n        this.setState({\n          posts: data,\n          loading: false,\n        });\n      });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      posts,\n      clientfirstname,\n      clientlastname,\n      clientemail,\n      clientphone,\n      clientstreetaddress,\n      clientcity,\n      clientstate,\n      clientzip,\n      description,\n    } = this.state;\n    const { firebase } = this.props;\n\n    let slug =\n      (clientlastname.match(/^[a-zA-Z0-9 ]*$/, '') &&\n        clientlastname.match(/^[a-zA-Z0-9 ]*$/, '')[0]) ||\n      '';\n\n    const latestPost = {\n      slug:\n        slug.toLowerCase().split(' ').join('-') +\n        Math.floor(Math.random() * 200) +\n        1,\n      clientfirstname,\n      clientlastname,\n      clientemail,\n      clientphone,\n      clientstreetaddress,\n      clientcity,\n      clientstate,\n      clientzip,\n      description,\n    };\n\n    const newPosts = [latestPost, ...posts];\n\n    this.setState({\n      posts: newPosts,\n      clientfirstname: '',\n      clientlastname: '',\n      clientemail: '',\n      clientphone: '',\n      clientstreetaddress: '',\n      clientcity: '',\n      clientstate: '',\n      clientzip: '',\n      description: '',\n    });\n\n    firebase.posts().add({\n      ...latestPost,\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      posts,\n      loading,\n      clientfirstname,\n      clientlastname,\n      clientemail,\n      clientphone,\n      clientstreetaddress,\n      clientcity,\n      clientstate,\n      clientzip,\n      description,\n    } = this.state;\n\n    if (loading) return <Loading />;\n\n    return (\n      <div className=\"home container\">\n        <div className=\"home__details\">\n          <h1 className=\"home__title\">Dashboard</h1>\n          {/*   <p className=\"home__description\">\n            Enter A New Referral:\n          </p>*/}\n        </div>\n\n        <div className=\"home__posts\">\n          <div className=\"home__posts__form\">\n            <div className=\"home__posts__form__title\">\n              Add New Referral\n            </div>\n            <form\n              name=\"Referral-Rewards\"\n              data-netlify=\"true\"\n              data-netlify-honeypot=\"bot-field\"\n              onSubmit={this.handleSubmit}\n            >\n              <input type=\"hidden\" name=\"bot-field\" />\n              <input\n                type=\"hidden\"\n                name=\"form-name\"\n                value=\"Referral-Rewards\"\n              />\n              <Input\n                name=\"clientfirstname\"\n                type=\"text\"\n                value={clientfirstname}\n                labelName=\"Client's First Name\"\n                onChange={this.handleChange}\n                required\n              />\n              <Input\n                name=\"clientlastname\"\n                type=\"text\"\n                value={clientlastname}\n                labelName=\"Client's Last Name\"\n                onChange={this.handleChange}\n                required\n              />\n              <Input\n                name=\"clientemail\"\n                type=\"email\"\n                value={clientemail}\n                labelName=\"Client's Email\"\n                onChange={this.handleChange}\n                required\n              />\n\n              <Input\n                name=\"clientphone\"\n                type=\"tel\"\n                value={clientphone}\n                labelName=\"Client's Phone\"\n                onChange={this.handleChange}\n                required\n              />\n              <Input\n                name=\"clientstreetaddress\"\n                type=\"text\"\n                value={clientstreetaddress}\n                labelName=\"Client's Street Address\"\n                onChange={this.handleChange}\n                required\n              />\n              <Input\n                name=\"clientcity\"\n                type=\"text\"\n                value={clientcity}\n                labelName=\"Client's City\"\n                onChange={this.handleChange}\n                required\n              />\n\n              <Input\n                name=\"clientstate\"\n                type=\"text\"\n                value={clientstate}\n                labelName=\"Client's State\"\n                placeholder=\"CA\"\n                onChange={this.handleChange}\n                required\n              />\n\n              <Input\n                name=\"clientzip\"\n                type=\"text\"\n                value={clientzip}\n                labelName=\"Client's Zip Code\"\n                onChange={this.handleChange}\n                required\n              />\n\n              <Input\n                name=\"description\"\n                type=\"textarea\"\n                value={description}\n                labelName=\"Description\"\n                onChange={this.handleChange}\n                required\n              />\n\n              <Button\n                className=\"home__posts__form__btn\"\n                type=\"submit\"\n              />\n            </form>\n          </div>\n\n          <div className=\"home__posts__items\">\n          <div className=\"home__posts__items__title\">\n            Previous Referrals\n          </div>\n            {posts &&\n              posts.length > 0 &&\n              posts.map((item, id) => (\n                <div key={id} className=\"home__post\">\n                  <Link\n                    className=\"home__post__title\"\n                    to={'/post/' + item.slug}\n                  >\n                    <Image\n                      className=\"home__post__image\"\n                      filename=\"postBG.jpg\"\n                    />\n                    <div className=\"home__post__text\">\n                      {item.clientfirstname &&\n                      item.clientfirstname < 30\n                        ? item.clientfirstname\n                        : item.clientfirstname.slice(0, 30) + '...'}\n                      <div\n                        className=\"home__post__description\"\n                        key={id}\n                      >\n                        {item.clientlastname &&\n                        item.clientlastname.length > 150\n                          ? item.clientlastname.slice(0, 150)\n                          : item.clientlastname + '...'}\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(Home);\n"]},"metadata":{},"sourceType":"module"}