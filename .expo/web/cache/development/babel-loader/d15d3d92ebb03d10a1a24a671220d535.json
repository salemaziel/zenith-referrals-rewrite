{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Auth/molecules/SignInTwitter.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { navigate } from 'gatsby';\nimport { withFirebase } from \"../../../../utils/Firebase\";\nimport { HOME } from \"../../../../constants/routes\";\nimport { FaTwitter } from 'react-icons/fa';\nvar ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\nvar ERROR_MSG_ACCOUNT_EXISTS = \"\\n  An account with an E-Mail address to\\n  this social account already exists. Try to login from\\n  this account instead and associate your social accounts on\\n  your personal account page.\\n\";\n\nvar SignInTwitter = function (_Component) {\n  _inherits(SignInTwitter, _Component);\n\n  var _super = _createSuper(SignInTwitter);\n\n  function SignInTwitter(props) {\n    var _this;\n\n    _classCallCheck(this, SignInTwitter);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function (event) {\n      _this.props.firebase.doSignInWithTwitter().then(function (socialAuthUser) {\n        return _this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {}\n        });\n      }).then(function () {\n        _this.setState({\n          error: null\n        });\n\n        navigate(HOME);\n      }).catch(function (error) {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        _this.setState({\n          error: error\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(SignInTwitter, [{\n    key: \"render\",\n    value: function render() {\n      var error = this.state.error;\n      return React.createElement(\"form\", {\n        className: \"login__content__providers__item login__content__providers__item--twitter\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(FaTwitter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      })), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, error.message));\n    }\n  }]);\n\n  return SignInTwitter;\n}(Component);\n\nexport default withFirebase(SignInTwitter);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Auth/molecules/SignInTwitter.jsx"],"names":["React","Component","navigate","withFirebase","HOME","FaTwitter","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInTwitter","props","onSubmit","event","firebase","doSignInWithTwitter","then","socialAuthUser","user","uid","set","username","additionalUserInfo","profile","name","email","roles","setState","error","catch","code","message","preventDefault","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,SAASC,YAAT;AACA,SAASC,IAAT;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,IAAMC,yBAAyB,GAC7B,+CADF;AAGA,IAAMC,wBAAwB,qMAA9B;;IAOMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAMnBC,QANmB,GAMR,UAAAC,KAAK,EAAI;AAClB,YAAKF,KAAL,CAAWG,QAAX,CACGC,mBADH,GAEGC,IAFH,CAEQ,UAAAC,cAAc,EAAI;AAEtB,eAAO,MAAKN,KAAL,CAAWG,QAAX,CAAoBI,IAApB,CAAyBD,cAAc,CAACC,IAAf,CAAoBC,GAA7C,EAAkDC,GAAlD,CAAsD;AAC3DC,UAAAA,QAAQ,EAAEJ,cAAc,CAACK,kBAAf,CAAkCC,OAAlC,CAA0CC,IADO;AAE3DC,UAAAA,KAAK,EAAER,cAAc,CAACK,kBAAf,CAAkCC,OAAlC,CAA0CE,KAFU;AAG3DC,UAAAA,KAAK,EAAE;AAHoD,SAAtD,CAAP;AAKD,OATH,EAUGV,IAVH,CAUQ,YAAM;AACV,cAAKW,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACAxB,QAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,OAbH,EAcGuB,KAdH,CAcS,UAAAD,KAAK,EAAI;AACd,YAAIA,KAAK,CAACE,IAAN,KAAetB,yBAAnB,EAA8C;AAC5CoB,UAAAA,KAAK,CAACG,OAAN,GAAgBtB,wBAAhB;AACD;;AAED,cAAKkB,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OApBH;;AAsBAf,MAAAA,KAAK,CAACmB,cAAN;AACD,KA9BkB;;AAGjB,UAAKC,KAAL,GAAa;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAb;AAHiB;AAIlB;;;;6BA4BQ;AAAA,UACCA,KADD,GACW,KAAKK,KADhB,CACCL,KADD;AAGP,aACE;AACE,QAAA,SAAS,EAAC,0EADZ;AAEE,QAAA,QAAQ,EAAE,KAAKhB,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAQGgB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACG,OAAV,CARZ,CADF;AAYD;;;;EAhDyB5B,S;;AAmD5B,eAAeE,YAAY,CAACK,aAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { withFirebase } from '../../../../utils/Firebase';\nimport { HOME } from '../../../../constants/routes';\nimport { FaTwitter } from 'react-icons/fa';\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInTwitter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        navigate(HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form\n        className=\"login__content__providers__item login__content__providers__item--twitter\"\n        onSubmit={this.onSubmit}\n      >\n        <button type=\"submit\">\n          <FaTwitter />\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(SignInTwitter);\n"]},"metadata":{},"sourceType":"module"}