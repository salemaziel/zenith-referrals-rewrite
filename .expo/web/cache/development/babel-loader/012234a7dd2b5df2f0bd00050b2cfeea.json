{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/molecules/PasswordForget/PasswordForget.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { withFirebase } from \"../../../utils/Firebase\";\nimport PasswordForgetForm from \"./atoms/PasswordForgetForm\";\nvar INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nvar PasswordForget = function (_Component) {\n  _inherits(PasswordForget, _Component);\n\n  var _super = _createSuper(PasswordForget);\n\n  function PasswordForget(props) {\n    var _this;\n\n    _classCallCheck(this, PasswordForget);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function (event) {\n      var email = _this.state.email;\n\n      _this.props.firebase.doPasswordReset(email).then(function () {\n        _this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(PasswordForget, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error;\n      var className = this.props.className;\n      var isInvalid = email === '';\n      return React.createElement(PasswordForgetForm, {\n        className: className,\n        onSubmit: this.onSubmit,\n        onChange: this.onChange,\n        email: email,\n        error: error,\n        isInvalid: isInvalid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return PasswordForget;\n}(Component);\n\nexport default withFirebase(PasswordForget);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/molecules/PasswordForget/PasswordForget.jsx"],"names":["React","Component","withFirebase","PasswordForgetForm","INITIAL_STATE","email","error","PasswordForget","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","className","isInvalid"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT;AACA,OAAOC,kBAAP;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;IAKMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAMnBC,QANmB,GAMR,UAAAC,KAAK,EAAI;AAAA,UACVL,KADU,GACA,MAAKM,KADL,CACVN,KADU;;AAGlB,YAAKG,KAAL,CAAWI,QAAX,CACGC,eADH,CACmBR,KADnB,EAEGS,IAFH,CAEQ,YAAM;AACV,cAAKC,QAAL,mBAAmBX,aAAnB;AACD,OAJH,EAKGY,KALH,CAKS,UAAAV,KAAK,EAAI;AACd,cAAKS,QAAL,CAAc;AAAET,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAPH;;AASAI,MAAAA,KAAK,CAACO,cAAN;AACD,KAnBkB;;AAAA,UAqBnBC,QArBmB,GAqBR,UAAAR,KAAK,EAAI;AAClB,YAAKK,QAAL,qBAAiBL,KAAK,CAACS,MAAN,CAAaC,IAA9B,EAAqCV,KAAK,CAACS,MAAN,CAAaE,KAAlD;AACD,KAvBkB;;AAGjB,UAAKV,KAAL,qBAAkBP,aAAlB;AAHiB;AAIlB;;;;6BAqBQ;AAAA,wBACkB,KAAKO,KADvB;AAAA,UACCN,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UAECgB,SAFD,GAEe,KAAKd,KAFpB,CAECc,SAFD;AAIP,UAAMC,SAAS,GAAGlB,KAAK,KAAK,EAA5B;AAEA,aACE,oBAAC,kBAAD;AACE,QAAA,SAAS,EAAEiB,SADb;AAEE,QAAA,QAAQ,EAAE,KAAKb,QAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKS,QAHjB;AAIE,QAAA,KAAK,EAAEb,KAJT;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,SAAS,EAAEiB,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EA1C0BtB,S;;AA6C7B,eAAeC,YAAY,CAACK,cAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase } from '../../../utils/Firebase';\nimport PasswordForgetForm from './atoms/PasswordForgetForm';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const { className } = this.props;\n\n    const isInvalid = email === '';\n\n    return (\n      <PasswordForgetForm\n        className={className}\n        onSubmit={this.onSubmit}\n        onChange={this.onChange}\n        email={email}\n        error={error}\n        isInvalid={isInvalid}\n      />\n    );\n  }\n}\n\nexport default withFirebase(PasswordForget);\n"]},"metadata":{},"sourceType":"module"}