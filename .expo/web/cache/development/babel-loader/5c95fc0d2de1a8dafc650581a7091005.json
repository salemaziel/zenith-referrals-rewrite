{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Settings/molecules/LoginManagement/LoginManagement.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { withFirebase } from \"../../../../../utils/Firebase\";\nimport SocialLoginToggle from \"./atoms/SocialLoginToggle\";\nimport { FaGithub, FaFacebookF, FaGoogle, FaTwitter } from 'react-icons/fa';\nvar SIGN_IN_METHODS = [{\n  id: 'google.com',\n  provider: 'googleProvider',\n  name: 'google',\n  Icon: FaGoogle\n}];\n\nvar LoginManagement = function (_Component) {\n  _inherits(LoginManagement, _Component);\n\n  var _super = _createSuper(LoginManagement);\n\n  function LoginManagement(props) {\n    var _this;\n\n    _classCallCheck(this, LoginManagement);\n\n    _this = _super.call(this, props);\n    _this._initFirebase = false;\n\n    _this.firebaseInit = function () {\n      if (_this.props.firebase && !_this._initFirebase) {\n        _this._initFirebase = true;\n\n        _this.fetchSignInMethods();\n      }\n    };\n\n    _this.fetchSignInMethods = function () {\n      _this.props.firebase.auth.fetchSignInMethodsForEmail(_this.props.authUser.email).then(function (activeSignInMethods) {\n        return _this.setState({\n          activeSignInMethods: activeSignInMethods,\n          error: null\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onSocialLoginLink = function (provider) {\n      _this.props.firebase.auth.currentUser.linkWithPopup(_this.props.firebase[provider]).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onUnlink = function (providerId) {\n      _this.props.firebase.auth.currentUser.unlink(providerId).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginManagement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.firebaseInit();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.firebaseInit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n      var className = this.props.className;\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, \"Sign In Methods\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, SIGN_IN_METHODS.map(function (signInMethod) {\n        var onlyOneLeft = activeSignInMethods.length === 1;\n        var isEnabled = activeSignInMethods.includes(signInMethod.id);\n        return React.createElement(\"div\", {\n          key: signInMethod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        }, React.createElement(SocialLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onSocialLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }));\n      })), error && error.message);\n    }\n  }]);\n\n  return LoginManagement;\n}(Component);\n\nexport default withFirebase(LoginManagement);","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/components/scenes/Settings/molecules/LoginManagement/LoginManagement.jsx"],"names":["React","Component","withFirebase","SocialLoginToggle","FaGithub","FaFacebookF","FaGoogle","FaTwitter","SIGN_IN_METHODS","id","provider","name","Icon","LoginManagement","props","_initFirebase","firebaseInit","firebase","fetchSignInMethods","auth","fetchSignInMethodsForEmail","authUser","email","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onUnlink","providerId","unlink","state","className","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { withFirebase } from '../../../../../utils/Firebase';\nimport SocialLoginToggle from './atoms/SocialLoginToggle';\nimport {\n  FaGithub,\n  FaFacebookF,\n  FaGoogle,\n  FaTwitter,\n} from 'react-icons/fa';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n    name: 'google',\n    Icon: FaGoogle,\n  },\n//  {\n//    id: 'facebook.com',\n//    provider: 'facebookProvider',\n//    name: 'facebook',\n//    Icon: FaFacebookF,\n//  },\n//  {\n//    id: 'twitter.com',\n//    provider: 'twitterProvider',\n//    name: 'twitter',\n//    Icon: FaTwitter,\n//  },\n//  {\n//    id: 'github.com',\n//    provider: 'githubProvider',\n//    name: 'github',\n//    Icon: FaGithub,\n//  },\n];\n\nclass LoginManagement extends Component {\n  _initFirebase = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  firebaseInit = () => {\n    if (this.props.firebase && !this._initFirebase) {\n      this._initFirebase = true;\n\n      this.fetchSignInMethods();\n    }\n  };\n\n  componentDidMount() {\n    this.firebaseInit();\n  }\n\n  componentDidUpdate() {\n    this.firebaseInit();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        <p>Sign In Methods</p>\n        <div>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <div key={signInMethod.id}>\n                <SocialLoginToggle\n                  onlyOneLeft={onlyOneLeft}\n                  isEnabled={isEnabled}\n                  signInMethod={signInMethod}\n                  onLink={this.onSocialLoginLink}\n                  onUnlink={this.onUnlink}\n                />\n              </div>\n            );\n          })}\n        </div>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(LoginManagement);\n"]},"metadata":{},"sourceType":"module"}