{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/templates/post.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from \"../utils/layout\";\nimport PostBase from \"../components/scenes/Post/Post\";\nimport { compose } from 'recompose';\nimport { withAuthorization, withEmailVerification } from \"../utils/Session\";\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nvar PostPage = compose(withEmailVerification, withAuthorization(condition))(PostBase);\nexport var Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$pageConte = _this$props.pageContext,\n          clientfirstname = _this$props$pageConte.clientfirstname,\n          clientlastname = _this$props$pageConte.clientlastname,\n          clientemail = _this$props$pageConte.clientemail,\n          clientphone = _this$props$pageConte.clientphone,\n          clientstreetaddress = _this$props$pageConte.clientstreetaddress,\n          clientcity = _this$props$pageConte.clientcity,\n          clientstate = _this$props$pageConte.clientstate,\n          clientzip = _this$props$pageConte.clientzip,\n          description = _this$props$pageConte.description,\n          slug = _this$props$pageConte.slug,\n          uri = _this$props.uri;\n      var uriItems = uri.split('/');\n      var uriSlug = uriItems[uriItems.length - 1];\n      var isLoaded = uriSlug === slug;\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(PostPage, {\n        clientfirstname: clientfirstname,\n        clientlastname: clientlastname,\n        clientphone: clientphone,\n        clientemail: clientemail,\n        clientstreetaddress: clientstreetaddress,\n        clientcity: clientcity,\n        clientstate: clientstate,\n        clientzip: clientzip,\n        description: description,\n        slug: slug || uriSlug,\n        isLoaded: isLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Post;\n}(Component);\nexport default Post;","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/src/templates/post.js"],"names":["React","Component","Layout","PostBase","compose","withAuthorization","withEmailVerification","condition","authUser","PostPage","Post","props","pageContext","clientfirstname","clientlastname","clientemail","clientphone","clientstreetaddress","clientcity","clientstate","clientzip","description","slug","uri","uriItems","split","uriSlug","length","isLoaded"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SACEC,iBADF,EAEEC,qBAFF;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SAAI,CAAC,CAACA,QAAN;AAAA,CAA1B;;AAEA,IAAMC,QAAQ,GAAGL,OAAO,CACtBE,qBADsB,EAEtBD,iBAAiB,CAACE,SAAD,CAFK,CAAP,CAGfJ,QAHe,CAAjB;AAKA,WAAaO,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBAIH,KAAKC,KAJF;AAAA,8CAELC,WAFK;AAAA,UAEUC,eAFV,yBAEUA,eAFV;AAAA,UAE2BC,cAF3B,yBAE2BA,cAF3B;AAAA,UAE2CC,WAF3C,yBAE2CA,WAF3C;AAAA,UAEwDC,WAFxD,yBAEwDA,WAFxD;AAAA,UAEqEC,mBAFrE,yBAEqEA,mBAFrE;AAAA,UAE0FC,UAF1F,yBAE0FA,UAF1F;AAAA,UAEsGC,WAFtG,yBAEsGA,WAFtG;AAAA,UAEmHC,SAFnH,yBAEmHA,SAFnH;AAAA,UAE8HC,WAF9H,yBAE8HA,WAF9H;AAAA,UAE2IC,IAF3I,yBAE2IA,IAF3I;AAAA,UAGLC,GAHK,eAGLA,GAHK;AAMP,UAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAjB;AAEA,UAAMC,OAAO,GAAGF,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAxB;AAEA,UAAMC,QAAQ,GAAGF,OAAO,KAAKJ,IAA7B;AAEA,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,eAAe,EAAET,eADnB;AAEE,QAAA,cAAc,EAAEC,cAFlB;AAGE,QAAA,WAAW,EAAEE,WAHf;AAIE,QAAA,WAAW,EAAED,WAJf;AAKE,QAAA,mBAAmB,EAAEE,mBALvB;AAME,QAAA,UAAU,EAAEC,UANd;AAOE,QAAA,WAAW,EAAEC,WAPf;AAQE,QAAA,SAAS,EAAEC,SARb;AASE,QAAA,WAAW,EAAEC,WATf;AAUE,QAAA,IAAI,EAAEC,IAAI,IAAII,OAVhB;AAWE,QAAA,QAAQ,EAAEE,QAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAiBD;AA9BH;;AAAA;AAAA,EAA0B3B,SAA1B;AAiCA,eAAeS,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../utils/layout';\nimport PostBase from '../components/scenes/Post/Post';\nimport { compose } from 'recompose';\nimport {\n  withAuthorization,\n  withEmailVerification,\n} from '../utils/Session';\n\nconst condition = authUser => !!authUser;\n\nconst PostPage = compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(PostBase);\n\nexport class Post extends Component {\n  render() {\n    const {\n      pageContext: { clientfirstname, clientlastname, clientemail, clientphone, clientstreetaddress, clientcity, clientstate, clientzip, description, slug },\n      uri,\n    } = this.props;\n\n    const uriItems = uri.split('/');\n\n    const uriSlug = uriItems[uriItems.length - 1];\n\n    const isLoaded = uriSlug === slug;\n\n    return (\n      <Layout>\n        <PostPage\n          clientfirstname={clientfirstname}\n          clientlastname={clientlastname}\n          clientphone={clientphone}\n          clientemail={clientemail}\n          clientstreetaddress={clientstreetaddress}\n          clientcity={clientcity}\n          clientstate={clientstate}\n          clientzip={clientzip}\n          description={description}\n          slug={slug || uriSlug}\n          isLoaded={isLoaded}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}