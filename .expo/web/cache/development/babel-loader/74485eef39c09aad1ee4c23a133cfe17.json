{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/pc/Public/zenith/gatsby-firebase-starter-NEW/.cache/root.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Router, Location, BaseContext } from \"@reach/router\";\nimport { ScrollContext } from \"gatsby-react-router-scroll\";\nimport { shouldUpdateScroll, init as navigationInit, RouteUpdates } from \"./navigation\";\nimport { apiRunner } from \"./api-runner-browser\";\nimport loader from \"./loader\";\nimport { PageQueryStore, StaticQueryStore } from \"./query-result-store\";\nimport EnsureResources from \"./ensure-resources\";\nimport { reportError, clearError } from \"./error-overlay-handler\";\n\nif (window.__webpack_hot_middleware_reporter__ !== undefined && process.env.GATSBY_HOT_LOADER !== \"fast-refresh\") {\n  var overlayErrorID = \"webpack\";\n\n  window.__webpack_hot_middleware_reporter__.useCustomOverlay({\n    showProblems: function showProblems(type, obj) {\n      if (type !== \"errors\") {\n        clearError(overlayErrorID);\n        return;\n      }\n\n      reportError(overlayErrorID, obj[0]);\n    },\n    clear: function clear() {\n      clearError(overlayErrorID);\n    }\n  });\n}\n\nnavigationInit();\n\nvar RouteHandler = function RouteHandler(props) {\n  return React.createElement(BaseContext.Provider, {\n    value: {\n      baseuri: \"/\",\n      basepath: \"/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, React.createElement(PageQueryStore, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar LocationHandler = function (_React$Component) {\n  _inherits(LocationHandler, _React$Component);\n\n  var _super = _createSuper(LocationHandler);\n\n  function LocationHandler() {\n    _classCallCheck(this, LocationHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LocationHandler, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var location = this.props.location;\n\n      if (!loader.isPageNotFound(location.pathname)) {\n        return React.createElement(EnsureResources, {\n          location: location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        }, function (locationAndPageResources) {\n          return React.createElement(RouteUpdates, {\n            location: location,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }\n          }, React.createElement(ScrollContext, {\n            location: location,\n            shouldUpdateScroll: shouldUpdateScroll,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }\n          }, React.createElement(Router, {\n            basepath: __BASE_PATH__,\n            location: location,\n            id: \"gatsby-focus-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }\n          }, React.createElement(RouteHandler, _extends({\n            path: encodeURI(locationAndPageResources.pageResources.page.matchPath || locationAndPageResources.pageResources.page.path)\n          }, _this.props, locationAndPageResources, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }\n          })))));\n        });\n      }\n\n      var dev404PageResources = loader.loadPageSync(\"/dev-404-page\");\n      var real404PageResources = loader.loadPageSync(\"/404.html\");\n      var custom404;\n\n      if (real404PageResources) {\n        custom404 = React.createElement(PageQueryStore, _extends({}, this.props, {\n          pageResources: real404PageResources,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return React.createElement(RouteUpdates, {\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Router, {\n        basepath: __BASE_PATH__,\n        location: location,\n        id: \"gatsby-focus-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, React.createElement(RouteHandler, {\n        path: location.pathname,\n        location: location,\n        pageResources: dev404PageResources,\n        custom404: custom404,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LocationHandler;\n}(React.Component);\n\nvar Root = function Root() {\n  return React.createElement(Location, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, function (locationContext) {\n    return React.createElement(LocationHandler, _extends({}, locationContext, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }));\n  });\n};\n\nvar WrappedRoot = apiRunner(\"wrapRootElement\", {\n  element: React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 14\n    }\n  })\n}, React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }\n}), function (_ref) {\n  var result = _ref.result,\n      plugin = _ref.plugin;\n  return {\n    element: result\n  };\n}).pop();\nexport default (function () {\n  return React.createElement(StaticQueryStore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 22\n    }\n  }, WrappedRoot);\n});","map":{"version":3,"sources":["/home/pc/Public/zenith/gatsby-firebase-starter-NEW/.cache/root.js"],"names":["React","Router","Location","BaseContext","ScrollContext","shouldUpdateScroll","init","navigationInit","RouteUpdates","apiRunner","loader","PageQueryStore","StaticQueryStore","EnsureResources","reportError","clearError","window","__webpack_hot_middleware_reporter__","undefined","process","env","GATSBY_HOT_LOADER","overlayErrorID","useCustomOverlay","showProblems","type","obj","clear","RouteHandler","props","baseuri","basepath","LocationHandler","location","isPageNotFound","pathname","locationAndPageResources","__BASE_PATH__","encodeURI","pageResources","page","matchPath","path","dev404PageResources","loadPageSync","real404PageResources","custom404","Component","Root","locationContext","WrappedRoot","element","result","plugin","pop"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,eAA9C;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,SACEC,kBADF,EAEEC,IAAI,IAAIC,cAFV,EAGEC,YAHF;AAKA,SAASC,SAAT;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,EAAyBC,gBAAzB;AACA,OAAOC,eAAP;AAEA,SAASC,WAAT,EAAsBC,UAAtB;;AAIA,IACEC,MAAM,CAACC,mCAAP,KAA+CC,SAA/C,IACAC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,mBAFF,EAGE;AACA,MAAMC,cAAc,YAApB;;AAEAN,EAAAA,MAAM,CAACC,mCAAP,CAA2CM,gBAA3C,CAA4D;AAC1DC,IAAAA,YAD0D,wBAC7CC,IAD6C,EACvCC,GADuC,EAClC;AACtB,UAAID,IAAI,aAAR,EAAuB;AACrBV,QAAAA,UAAU,CAACO,cAAD,CAAV;AACA;AACD;;AACDR,MAAAA,WAAW,CAACQ,cAAD,EAAiBI,GAAG,CAAC,CAAD,CAApB,CAAX;AACD,KAPyD;AAQ1DC,IAAAA,KAR0D,mBAQlD;AACNZ,MAAAA,UAAU,CAACO,cAAD,CAAV;AACD;AAVyD,GAA5D;AAYD;;AAEDf,cAAc;;AAUd,IAAMqB,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SACxB,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,KADF;AAELC,MAAAA,QAAQ;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,cAAD,eAAoBF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CADwB;AAAA,CAA1B;;IAWMG,e;;;;;;;;;;;;;6BACK;AAAA;;AAAA,UACCC,QADD,GACc,KAAKJ,KADnB,CACCI,QADD;;AAGP,UAAI,CAACvB,MAAM,CAACwB,cAAP,CAAsBD,QAAQ,CAACE,QAA/B,CAAL,EAA+C;AAC7C,eACE,oBAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEF,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAG,wBAAwB;AAAA,iBACvB,oBAAC,YAAD;AAAc,YAAA,QAAQ,EAAEH,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,aAAD;AACE,YAAA,QAAQ,EAAEA,QADZ;AAEE,YAAA,kBAAkB,EAAE5B,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE,oBAAC,MAAD;AACE,YAAA,QAAQ,EAAEgC,aADZ;AAEE,YAAA,QAAQ,EAAEJ,QAFZ;AAGE,YAAA,EAAE,EAAC,sBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKE,oBAAC,YAAD;AACE,YAAA,IAAI,EAAEK,SAAS,CACbF,wBAAwB,CAACG,aAAzB,CAAuCC,IAAvC,CAA4CC,SAA5C,IACEL,wBAAwB,CAACG,aAAzB,CAAuCC,IAAvC,CAA4CE,IAFjC;AADjB,aAKM,KAAI,CAACb,KALX,EAMMO,wBANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CAJF,CADF,CADuB;AAAA,SAD3B,CADF;AA2BD;;AAED,UAAMO,mBAAmB,GAAGjC,MAAM,CAACkC,YAAP,iBAA5B;AACA,UAAMC,oBAAoB,GAAGnC,MAAM,CAACkC,YAAP,aAA7B;AACA,UAAIE,SAAJ;;AACA,UAAID,oBAAJ,EAA0B;AACxBC,QAAAA,SAAS,GACP,oBAAC,cAAD,eAAoB,KAAKjB,KAAzB;AAAgC,UAAA,aAAa,EAAEgB,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD;;AAED,aACE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEZ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAEI,aADZ;AAEE,QAAA,QAAQ,EAAEJ,QAFZ;AAGE,QAAA,EAAE,EAAC,sBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEA,QAAQ,CAACE,QADjB;AAEE,QAAA,QAAQ,EAAEF,QAFZ;AAGE,QAAA,aAAa,EAAEU,mBAHjB;AAIE,QAAA,SAAS,EAAEG,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAgBD;;;;EA3D2B9C,KAAK,CAAC+C,S;;AA8DpC,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,eAAe;AAAA,WAAI,oBAAC,eAAD,eAAqBA,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GADlB,CADW;AAAA,CAAb;;AAOA,IAAMC,WAAW,GAAGzC,SAAS,oBAE3B;AAAE0C,EAAAA,OAAO,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX,CAF2B,EAG3B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAH2B,EAI3B,gBAAwB;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACtB,SAAO;AAAEF,IAAAA,OAAO,EAAEC;AAAX,GAAP;AACD,CAN0B,CAAT,CAOlBE,GAPkB,EAApB;AASA,gBAAe;AAAA,SAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBJ,WAAnB,CAAN;AAAA,CAAf","sourcesContent":["import React from \"react\"\nimport { Router, Location, BaseContext } from \"@reach/router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\n\nimport {\n  shouldUpdateScroll,\n  init as navigationInit,\n  RouteUpdates,\n} from \"./navigation\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport loader from \"./loader\"\nimport { PageQueryStore, StaticQueryStore } from \"./query-result-store\"\nimport EnsureResources from \"./ensure-resources\"\n\nimport { reportError, clearError } from \"./error-overlay-handler\"\n\n// TODO: Remove entire block when we make fast-refresh the default\n// In fast-refresh, this logic is all moved into the `error-overlay-handler`\nif (\n  window.__webpack_hot_middleware_reporter__ !== undefined &&\n  process.env.GATSBY_HOT_LOADER !== `fast-refresh`\n) {\n  const overlayErrorID = `webpack`\n  // Report build errors\n  window.__webpack_hot_middleware_reporter__.useCustomOverlay({\n    showProblems(type, obj) {\n      if (type !== `errors`) {\n        clearError(overlayErrorID)\n        return\n      }\n      reportError(overlayErrorID, obj[0])\n    },\n    clear() {\n      clearError(overlayErrorID)\n    },\n  })\n}\n\nnavigationInit()\n\n// In gatsby v2 if Router is used in page using matchPaths\n// paths need to contain full path.\n// For example:\n//   - page have `/app/*` matchPath\n//   - inside template user needs to use `/app/xyz` as path\n// Resetting `basepath`/`baseuri` keeps current behaviour\n// to not introduce breaking change.\n// Remove this in v3\nconst RouteHandler = props => (\n  <BaseContext.Provider\n    value={{\n      baseuri: `/`,\n      basepath: `/`,\n    }}\n  >\n    <PageQueryStore {...props} />\n  </BaseContext.Provider>\n)\n\nclass LocationHandler extends React.Component {\n  render() {\n    const { location } = this.props\n\n    if (!loader.isPageNotFound(location.pathname)) {\n      return (\n        <EnsureResources location={location}>\n          {locationAndPageResources => (\n            <RouteUpdates location={location}>\n              <ScrollContext\n                location={location}\n                shouldUpdateScroll={shouldUpdateScroll}\n              >\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={encodeURI(\n                      locationAndPageResources.pageResources.page.matchPath ||\n                        locationAndPageResources.pageResources.page.path\n                    )}\n                    {...this.props}\n                    {...locationAndPageResources}\n                  />\n                </Router>\n              </ScrollContext>\n            </RouteUpdates>\n          )}\n        </EnsureResources>\n      )\n    }\n\n    const dev404PageResources = loader.loadPageSync(`/dev-404-page`)\n    const real404PageResources = loader.loadPageSync(`/404.html`)\n    let custom404\n    if (real404PageResources) {\n      custom404 = (\n        <PageQueryStore {...this.props} pageResources={real404PageResources} />\n      )\n    }\n\n    return (\n      <RouteUpdates location={location}>\n        <Router\n          basepath={__BASE_PATH__}\n          location={location}\n          id=\"gatsby-focus-wrapper\"\n        >\n          <RouteHandler\n            path={location.pathname}\n            location={location}\n            pageResources={dev404PageResources}\n            custom404={custom404}\n          />\n        </Router>\n      </RouteUpdates>\n    )\n  }\n}\n\nconst Root = () => (\n  <Location>\n    {locationContext => <LocationHandler {...locationContext} />}\n  </Location>\n)\n\n// Let site, plugins wrap the site e.g. for Redux.\nconst WrappedRoot = apiRunner(\n  `wrapRootElement`,\n  { element: <Root /> },\n  <Root />,\n  ({ result, plugin }) => {\n    return { element: result }\n  }\n).pop()\n\nexport default () => <StaticQueryStore>{WrappedRoot}</StaticQueryStore>\n"]},"metadata":{},"sourceType":"module"}